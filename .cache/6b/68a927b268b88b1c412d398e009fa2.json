{"id":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","dependencies":[{"name":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1758702118249},{"name":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1758704190330},{"name":"../internals/array-buffer-view-core","loc":{"line":3,"column":34,"index":81},"parent":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\modules\\esnext.typed-array.to-spliced.js","resolved":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\internals\\array-buffer-view-core.js"},{"name":"../internals/length-of-array-like","loc":{"line":4,"column":32,"index":153},"parent":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\modules\\esnext.typed-array.to-spliced.js","resolved":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\internals\\length-of-array-like.js"},{"name":"../internals/is-big-int-array","loc":{"line":5,"column":28,"index":219},"parent":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\modules\\esnext.typed-array.to-spliced.js","resolved":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\internals\\is-big-int-array.js"},{"name":"../internals/to-absolute-index","loc":{"line":6,"column":30,"index":283},"parent":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\modules\\esnext.typed-array.to-spliced.js","resolved":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-absolute-index.js"},{"name":"../internals/to-big-int","loc":{"line":7,"column":23,"index":341},"parent":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\modules\\esnext.typed-array.to-spliced.js","resolved":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-big-int.js"},{"name":"../internals/to-integer-or-infinity","loc":{"line":8,"column":34,"index":403},"parent":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\modules\\esnext.typed-array.to-spliced.js","resolved":"D:\\Coding Files\\VS Code\\JS\\Jonas\\18-forkify\\starter\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"}],"generated":{"js":"'use strict';\n// TODO: Remove from `core-js@4`\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toBigInt = require('../internals/to-big-int');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar max = Math.max;\nvar min = Math.min;\n\n// `%TypedArray%.prototype.toSpliced` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSpliced\nexportTypedArrayMethod('toSpliced', function toSpliced(start, deleteCount /* , ...items */) {\n  var O = aTypedArray(this);\n  var C = getTypedArrayConstructor(O);\n  var len = lengthOfArrayLike(O);\n  var actualStart = toAbsoluteIndex(start, len);\n  var argumentsLength = arguments.length;\n  var k = 0;\n  var insertCount, actualDeleteCount, thisIsBigIntArray, convertedItems, value, newLen, A;\n  if (argumentsLength === 0) {\n    insertCount = actualDeleteCount = 0;\n  } else if (argumentsLength === 1) {\n    insertCount = 0;\n    actualDeleteCount = len - actualStart;\n  } else {\n    actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    insertCount = argumentsLength - 2;\n    if (insertCount) {\n      convertedItems = new C(insertCount);\n      thisIsBigIntArray = isBigIntArray(convertedItems);\n      for (var i = 2; i < argumentsLength; i++) {\n        value = arguments[i];\n        // FF30- typed arrays doesn't properly convert objects to typed array values\n        convertedItems[i - 2] = thisIsBigIntArray ? toBigInt(value) : +value;\n      }\n    }\n  }\n  newLen = len + insertCount - actualDeleteCount;\n  A = new C(newLen);\n\n  for (; k < actualStart; k++) A[k] = O[k];\n  for (; k < actualStart + insertCount; k++) A[k] = convertedItems[k - actualStart];\n  for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];\n\n  return A;\n}, true);\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/core-js/modules/esnext.typed-array.to-spliced.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}}],"sources":{"node_modules/core-js/modules/esnext.typed-array.to-spliced.js":"'use strict';\n// TODO: Remove from `core-js@4`\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toBigInt = require('../internals/to-big-int');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar max = Math.max;\nvar min = Math.min;\n\n// `%TypedArray%.prototype.toSpliced` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSpliced\nexportTypedArrayMethod('toSpliced', function toSpliced(start, deleteCount /* , ...items */) {\n  var O = aTypedArray(this);\n  var C = getTypedArrayConstructor(O);\n  var len = lengthOfArrayLike(O);\n  var actualStart = toAbsoluteIndex(start, len);\n  var argumentsLength = arguments.length;\n  var k = 0;\n  var insertCount, actualDeleteCount, thisIsBigIntArray, convertedItems, value, newLen, A;\n  if (argumentsLength === 0) {\n    insertCount = actualDeleteCount = 0;\n  } else if (argumentsLength === 1) {\n    insertCount = 0;\n    actualDeleteCount = len - actualStart;\n  } else {\n    actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    insertCount = argumentsLength - 2;\n    if (insertCount) {\n      convertedItems = new C(insertCount);\n      thisIsBigIntArray = isBigIntArray(convertedItems);\n      for (var i = 2; i < argumentsLength; i++) {\n        value = arguments[i];\n        // FF30- typed arrays doesn't properly convert objects to typed array values\n        convertedItems[i - 2] = thisIsBigIntArray ? toBigInt(value) : +value;\n      }\n    }\n  }\n  newLen = len + insertCount - actualDeleteCount;\n  A = new C(newLen);\n\n  for (; k < actualStart; k++) A[k] = O[k];\n  for (; k < actualStart + insertCount; k++) A[k] = convertedItems[k - actualStart];\n  for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];\n\n  return A;\n}, true);\n"},"lineCount":53}},"error":null,"hash":"15d9703c38ceef72ba48beb46507399a","cacheData":{"env":{}}}